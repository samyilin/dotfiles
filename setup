#!/bin/bash

# Sets up bash profile, vimrc and more. Always WIP.
set -e
echo "Starting Setup..." && sleep 1
# if there's a bashrc already and it isn't a link, check the following.
if [ -f $HOME/.bashrc ] && [ ! -L $HOME/.bashrc ]; then
  # add the sourcing line to default .bashrc if not there already
  case `grep -Fx "test -f $HOME/.bashrc.personal && . $HOME/.bashrc.personal" "$HOME/.bashrc" >/dev/null; echo $?` in
    0)
      echo "bashrc already exists and is setup already"
      ;;
    1)
      echo "test -f $HOME/.bashrc.personal && . $HOME/.bashrc.personal" >> $HOME/.bashrc
      # code if not found
      ;;
    *)
      echo "Unknown error, check if grep is installed."
      # code if an error occurred
      ;;
  esac
  ln -sf "$PWD/.bashrc.personal" "$HOME/.bashrc.personal"
else
  # if no bashrc exists right now, force-link default bashrc to be default
  # bashrc
  if [ ! -f $HOME/.bashrc ]; then
    ln -sf "$PWD/.bashrc.default" "$HOME/.bashrc"
    ln -sf "$PWD/.bashrc.personal" "$HOME/.bashrc.personal"
    echo ".bashrc setup complete."
  fi
fi

if [ -f $HOME/.profile ] && [ ! -L $HOME/.profile ]; then
  # add the sourcing line to default .profile if not there already
  echo ".profile exists and doesn't need to be added again."
  echo "If your .profile doesn't try to source .bashrc, then it might be necessary"
  echo "to add those lines into your .profile."
else
  # if no profile exists right now, force-link default profile to be default
  # profile
  if [ ! -f $HOME/.profile ]; then
    ln -sf "$PWD/.profile.default" "$HOME/.profile"
  fi
fi
# Doesn't seem like there's typically a default .bash_aliases, so won't
# go through the same sharade. Same for .gitconfig. 
#
for i in .inputrc .bash_aliases; do
  if [ -f $HOME/$i ] && [ ! -L $HOME/$i ]; then
    mv $HOME/$i $HOME/$i.bak
  fi
  ln -sf "$PWD/$i.personal" "$HOME/$i"
done

for i in vim tmux git; do
  echo "initializing $i setup"
  sleep 1
  cd $i && ./setup && echo "$i setup complete, proceeding to next step" || echo "$i setup skipped, proceeding to next step"
  cd ->/dev/null
done

echo "Please read dotfiles/install/nix for nix specific instructions if needed."
echo "There're two ways to set up nix, hence why nix setup is not automated."
sleep 1
echo "Setup complete, thank you for using this script. "
exit 1
